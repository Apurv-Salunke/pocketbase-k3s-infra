name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.20'
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_GO_SERVER: go-server
  ECR_HELPER_SERVER: helper-server

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Test Go Server
        working-directory: ./go-server
        run: |
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
          go vet ./...

      - name: Test Helper Server
        working-directory: ./helper-server
        run: |
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
          go vet ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./go-server/coverage.txt,./helper-server/coverage.txt

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Run gosec
        uses: securego/gosec@master
        with:
          args: './...'

  build:
    name: Build
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Go Server
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ./go-server
        run: |
          docker build -t $ECR_REGISTRY/$ECR_GO_SERVER:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_GO_SERVER:$IMAGE_TAG $ECR_REGISTRY/$ECR_GO_SERVER:latest
          docker push $ECR_REGISTRY/$ECR_GO_SERVER:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_GO_SERVER:latest

      - name: Build and push Helper Server
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ./helper-server
        run: |
          docker build -t $ECR_REGISTRY/$ECR_HELPER_SERVER:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_HELPER_SERVER:$IMAGE_TAG $ECR_REGISTRY/$ECR_HELPER_SERVER:latest
          docker push $ECR_REGISTRY/$ECR_HELPER_SERVER:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_HELPER_SERVER:latest 